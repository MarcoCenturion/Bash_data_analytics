# -*- coding: utf-8 -*-
"""Cotizador_PNR_Amadeus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kPeEAV287t85XNx0u31UHylh3xMTBZlG

# Cotizador Aéreos

## Dos flujos distintos:

- Cabotaje
- Internacional
- Internacional saliendo fuera de Argentina

----

# Script para cotizar aéreos
## TIPS

- Remarcar la diferencia con Despegar
- Abonando en USD tiene descuento
- Foto de Pasaportes y visa (no tomamos reservas sin esto)
- Equipaje en cabina y en bodega
- Remarcar LTD (ultimo momento para emitir)
- Seguro de Asistencia
- Auto
"""

# Diccionarios a utilizar

aeropuertos = {
    "AEP": "Aeroparque Buenos Aires",
    "ALC": "Alicante",
    "EZE": "Ezeiza Buenos Aires",
    "MAD": "Madrid",
    "BCN": "Barcelona",
    "CDG": "Charles De Gaulle, París",
    "ORY": "Orly, París",
    "FRA": "Frankfurt",
    "LHR": "Heathrow, London",
    "FCO": "Fiumicino, Roma",
    "MXP": "Malpensa, Milano",
    "MIA": "Miami",
    "JFK": "John F. Kenedy New York",
    "LGA": "La Guardia New York",
    "EWR": "Newark New York",
    "COR": "Córdoba",
    "PTY": "Panamá",
    "SDQ": "Santo Domingo, Repùblica Dominicana",
    "ADZ": "San Andrés",
    "CTG": "Cartagena de Indias",
    "BOG": "Bogotá",
    "MEX": "México DF",
    "CUN": "Cancún",
    "PUJ": "Punta Cana",
    "GIG": "El Galeo Rìo de Janeiro",
    "GRU": "Guarulhos Sao Paulo",
    "SDU": "Santos Dumont Rio de Janeiro",
    "POA": "Porto Allegre",
    "SCL": "Santiago de Chile",
    "SYD": "Sydney",
    "LIM": "Lima Perù"
}

lineas = {
    "LA": "Latam Líneas Aéreas",
    "CM": "Copa Airlines",
    "AR": "Aerolíneas Argentinas",
    "AA": "American Airlines",
    "UX": "Air Europa",
    "G3": "Gol Linhas Aéreas",
    "UA": "United Airlines",
    "AZ": "ITA, ex Alitalia",
    "LH": "Lufthansa",
    "LX": "Swiss International Air Lines",
    "OB": "Boliviana de Aviación",
    "H2": "Sky Airline",
    "AD": "Azul Linhas Aéreas Brasileiras",
    "TP": "Tap Portugal",
    "IB": "Iberia",
    "AV": "Avianca"
}


# 0P|20|30|32|2B|PC|1P|2P|3P
franquicia = {
    "0P": "Solo 1 carryon de 10 kg. en cabina, sin equipaje en bodega",
    "1P": "Carryon de 10 kg. en cabina + una maleta despachada en bodega de 23kg",
    "2P": "Carryon de 10 kg. en cabina + dos maletas despachadas en bodega de 23kg c/u",
    "30": "Carryon de 10 kg. en cabina + una maleta despachada en bodega de 30kg",
    "3P": "Carryon de 10 kg. en cabina + tres maletas despachadas en bodega de 23kg c/u"
}

devoluciones = {
    "NON-REF": "No permite devoluciones ni cambios",
    "NON-END": "No permite devoluciones ni cambios"
}

# Importamos la librería RE, definimos un fee por defecto
# y preguntamos al usuario si quiere cambiarlo
import re
fee = 46000
fee = input("\n-------------------------------------\nDefinir fee en ARS oficial\nPor defecto es ARS46000: ")
blue = input("\n-------------------------------------\nIndicar el tipo de cambio blue Vendedor: ")
ventausd = input("\n----------------------------------\nIndicar el precio en USD emitiendo en MIA: ")

# Abrimos el archivo pnr.txt en modo lectura solament
# lo leemos
# con print nos aseugramos de ver el contenido

tst = '''


FXZ

01 P1
SELECTED RECOMMENDATION SUCCESSFULLY BOOKED
LAST TKT DTE 04JUL23 - SEE ADV PURCHASE
------------------------------------------------------------
     AL FLGT  BK T DATE  TIME  FARE BASIS      NVB  NVA   BG
 BUE
 BCN IB  2602 S  S 18FEB 1300  SNL3NOGZ        18FEB18FEB 0P

USD   601.00      18FEB24BUE IB BCN Q14.00
ARS161068.00      587.00NUC601.00END ROE1.000000
ARS 11274.80AR    XT ARS 72480.60Q1 ARS 2680.00QO ARS
ARS 48320.40O5    40267.00S5 ARS 375.20S7 ARS 2144.00TQ ARS
ARS133222.80XT    15276.00XR
ARS353886.00
RATE USED 1USD=268.0000000ARS
FARE FAMILIES:    (ENTER FQFn FOR DETAILS, FXY FOR UPSELL)
FARE FAMILY:FC1:1:BASIC
NO BAG INCLUDED FOR AT LEAST ONE FLIGHT
TICKET STOCK RESTRICTION
>                                                 PAGE  1/ 2

>

m

BG CXR: IB
PRICED WITH VALIDATING CARRIER IB - REPRICE IF DIFFERENT VC
NON-REFUNDABLE
>                                                 PAGE  2/ 2

>

rt

RP/CORG121EU/
  1  IB2602 S 18FEB 7 EZEBCN DK1  1300 0530  19FEB  E  0 332 G
     OPERATED BY SUBSIDIARY/FRANCHISE
     SEE RTSVC

>

m

FXU/TS TO UPSELL STANDARD FOR 21080.80ARS
TICKET STOCK RESTRICTION
BG CXR: 2*UX
PRICED WITH VALIDATING CARRIER UX - REPRICE IF DIFFERENT VC
TICKETS ARE NON-REFUNDABLE
ENDOS CHGS AND REF RESTRICTED
PAYMT RESTRICTIONS APPLY
>                                                 PAGE  3/ 3



'''

print(tst)

"""
## Cotizacion Internacional INICIADOS EN ARGENTINA

---"""

# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)[0][1]
cambio=re.findall('1USD=(......)', tst)
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0][1]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)[0]
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS|AR|ARS )(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)
retenc = re.findall('(\d{0,6}.\d{2})(Q1 |-Q1 )', tst)
fare_usd = re.findall('USD(\D{0,6}\d{1,6}.\d{2}) ', tst)[0]

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    horarios = renglon[34:44]
    #orides = renglon[22:29]
    ori = renglon[22:25]
    des = renglon[25:28]
    tramo.append(vuelo+fecha+horarios+aeropuertos.get(ori) + " - " + aeropuertos.get(des))
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)
totalmia = (float(fee) / float(blue)) + float(ventausd)*.85

# Escribimos el resultado
texto =(f'Cotización Internacional originada en Argentina:\n*TURISMO Y HOTELERÍA CONSULTORA*\nwww.thconsultora.com.ar | marco@thconsultora.com.ar | +543513070654\n-------------------------------------------------------------------\n* Compañia Emisora: {str(lineas.get(cia))}\n* Origen: {str(aeropuertos.get(orig))}\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Sale | Llega | Origen | Destino \n{str(tramos)}\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(franquicia.get(bagage))}\n* Tipo de Cambio oficial {str(cambio)}\n* Anticipo ganancias a recuperar en AFIP ARS: {str(retenc)} por pasajero \n* (válido solo emitiendo EN PESOS)\n**Total con impuestos ARS: {str(total)}*\n* Cambios y Devoluciones: {ref}\n* Pago cash o tarjeta de crédito en 1 cuota solamente \n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n**Emitiendo en USD{str(int(totalmia))} billetes físicos*\n* Tomamos reserva solo con foto de DNI o Pasaporte\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)

"""# Cotizacion Internacional iniciado fuera de Argentina"""

# EMISIONES DE TKTS INICIADOS FUERA DE ARGENTINA
# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)#[0]
cambio=re.findall('1USD=(......)', tst)
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS)(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)
#retenc = re.findall('(\d{0,6}.\d{2})(Q1 |-Q1 )', tst)[0]
#fare_usd = re.findall('EUR{0,6}\d{1,6}.\d{2}) ', tst)[0]

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    orides = renglon[22:29]
    horarios = renglon[34:44]
    tramo.append(vuelo+fecha+orides+horarios)
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)

# Escribimos el resultado
texto =(f'Cotización Internacional originada fuera de Argentina:\n*TURISMO Y HOTELERÍA CONSULTORA*\nwww.thconsultora.com.ar | marco@thconsultora.com.ar | +543513070654\n-------------------------------------------------------------------\n* Compañia Emisora: {str(cia)}\n* Origen: {str(orig)}\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Tramo | Sale | Llega: \n{str(tramos)}\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(bagage)}\n* Tipo de Cambio oficial {str(cambio)}\n* Anticipo ganancias a recuperar en AFIP ARS: {str(retenc)} por pasajero \n* (válido solo emitiendo EN PESOS)\n**Total con impuestos ARS: {str(total)}*\n* Cambios y Devoluciones: {ref}\n* Pago cash o tarjeta de crédito en 1 cuota solamente \n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n**Emitiendo en USD billetes físicos*\n* Tomamos reserva solo con foto de DNI o Pasaporte\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)

"""## Cotización Cabotaje
---
"""

# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)#[0]
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS|AR|ARS )(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    orides = renglon[22:29]
    horarios = renglon[34:44]
    tramo.append(vuelo+fecha+orides+horarios)
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)

# Escribimos el resultado
texto =(f'Cotización Cabotaje:\n---------------------------\n* Compañia Emisora: {str(cia)}\n* Origen: {str(orig)}\n\n---------------------------------\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Tramo | Sale | Llega: \n\n{str(tramos)}\n\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(bagage)}\n* Total con impuestos ARS: {str(total)}\n* Cambios y Devoluciones: {ref}\n---------------------------------\n* Pago cash | Consultar financiación sin interés\n\n----------------------------\n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n\n------------------------------------\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)