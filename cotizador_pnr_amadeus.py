# -*- coding: utf-8 -*-
"""Cotizador_PNR_Amadeus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kPeEAV287t85XNx0u31UHylh3xMTBZlG

# Cotizador Aéreos

## Dos flujos distintos:

- Cabotaje
- Internacional
- Internacional saliendo fuera de Argentina

----

# Script para cotizar aéreos
## TIPS

- Remarcar la diferencia con Despegar
- Abonando en USD tiene descuento
- Foto de Pasaportes y visa (no tomamos reservas sin esto)
- Equipaje en cabina y en bodega
- Remarcar LTD (ultimo momento para emitir)
- Seguro de Asistencia
- Auto
"""

# Diccionarios a utilizar

aeropuertos = {
    "AEP": "Aeroparque Buenos Aires",
    "ALC": "Alicante",
    "EZE": "Ezeiza Buenos Aires",
    "MAD": "Madrid",
    "BCN": "Barcelona",
    "CDG": "Charles De Gaulle, París",
    "ORY": "Orly, París",
    "FRA": "Frankfurt",
    "LHR": "Heathrow, London",
    "FCO": "Fiumicino, Roma",
    "MXP": "Malpensa, Milano",
    "MIA": "Miami",
    "JFK": "John F. Kenedy New York",
    "LGA": "La Guardia New York",
    "EWR": "Newark New York",
    "COR": "Córdoba",
    "PTY": "Panamá",
    "SDQ": "Santo Domingo, Repùblica Dominicana",
    "ADZ": "San Andrés",
    "CTG": "Cartagena de Indias",
    "BOG": "Bogotá",
    "MEX": "México DF",
    "CUN": "Cancún",
    "PUJ": "Punta Cana",
    "GIG": "El Galeo Rìo de Janeiro",
    "GRU": "Guarulhos Sao Paulo",
    "SDU": "Santos Dumont Rio de Janeiro",
    "POA": "Porto Allegre",
    "SCL": "Santiago de Chile",
    "BUE": "Buenos Aires",
    "SYD": "Sydney",
    "LIM": "Lima Perù"
}

lineas = {
    "LA": "Latam Líneas Aéreas",
    "CM": "Copa Airlines",
    "AR": "Aerolíneas Argentinas",
    "AA": "American Airlines",
    "UX": "Air Europa",
    "G3": "Gol Linhas Aéreas",
    "UA": "United Airlines",
    "AZ": "ITA, ex Alitalia",
    "LH": "Lufthansa",
    "LX": "Swiss International Air Lines",
    "OB": "Boliviana de Aviación",
    "H2": "Sky Airline",
    "AD": "Azul Linhas Aéreas Brasileiras",
    "TP": "Tap Portugal",
    "IB": "Iberia",
    "AV": "Avianca"
}


# 0P|20|30|32|2B|PC|1P|2P|3P
franquicia = {
    "0P": "Solo 1 carryon de 10 kg. en cabina, sin equipaje en bodega",
    "1P": "Carryon de 10 kg. en cabina + una maleta despachada en bodega de 23kg",
    "2P": "Carryon de 10 kg. en cabina + dos maletas despachadas en bodega de 23kg c/u",
    "30": "Carryon de 10 kg. en cabina + una maleta despachada en bodega de 30kg",
    "3P": "Carryon de 10 kg. en cabina + tres maletas despachadas en bodega de 23kg c/u"
}

devoluciones = {
    "NON-REF": "No permite devoluciones ni cambios",
    "NON-END": "No permite devoluciones ni cambios"
}

# Abrimos el archivo pnr.txt en modo lectura solament
# lo leemos
# con print nos aseugramos de ver el contenido

tst = '''


--- MSC ---
RP/CORG121EU/
  1  LA 491 Q 12MAR 2*CORSCL DK1  1239 1409  12MAR  E  0 320 S
     101 WPRYBHKMLVXSNQOGTAE
     SEE RTSVC
  2  LA 706 Q 12MAR 2*SCLMAD DK1  2120 1420  13MAR  E  0 789 DB
     010 IB 7109
     SEE RTSVC
  3  LA 715 Q 13APR 6*MADSCL DK1  2340 1005  14APR  E  1 789 B
     SEE RTSVC
  4  LA 486 Q 14APR 7*SCLCOR DK1  1515 1746  14APR  E  0 320 S
     010 IB 7108
     101 WPRYBHKMLVXSNQOGTAE
     SEE RTSVC

>

fxr

FXR

01 P1
NO REBOOKING REQUIRED FOR LOWEST AVAILABLE FARE
LAST TKT DTE 02JUL23/06:11 LT in POS - SEE ADV PURCHASE
------------------------------------------------------------
     AL FLGT  BK T DATE  TIME  FARE BASIS      NVB  NVA   BG
 COR
XSCL LA   491 Q  Q 12MAR 1239  QLESL58I        12MAR12MAR 0P
 MAD LA   706 Q  Q 12MAR 2120  QLESL58I        12MAR12MAR 0P
XSCL LA   715 Q  Q 13APR 2340  QLESL58I        13APR13APR 0P
 COR LA   486 Q  Q 14APR 1515  QLESL58I        14APR14APR 0P

USD   850.00      12MAR24COR LA X/SCL LA MAD M425.00LA X/SCL
ARS227800.00      LA COR M425.00NUC850.00END ROE1.000000
ARS 16846.50-AR   XT ARS 72199.20-O5 ARS 108298.80-Q1 ARS
ARS 12864.00-YR   2680.00-QO ARS 60166.00-S5 ARS 375.20-S7
ARS268148.00-XT   ARS 2144.00-TQ ARS 15276.00-XR ARS 5874.60
ARS525658.50      -JD ARS 183.20-OG ARS 951.00-QV
RATE USED 1USD=268.00000ARS
NO BAG INCLUDED FOR AT LEAST ONE FLIGHT
>                                                 PAGE  2/ 3

>

m

FARE FAMILIES:    (ENTER FQFN FOR DETAILS, FXY FOR UPSELL)
FARE FAMILY:FC1:1-2:SL
FARE FAMILY:FC2:3-4:SL
FXU/TS TO UPSELL SE-SL FOR 30511.80ARS
TICKET STOCK RESTRICTION
BG CXR: 2*LA/2*LA
PRICED WITH VALIDATING CARRIER LA - REPRICE IF DIFFERENT VC
TICKETS ARE NON-REFUNDABLE
ENDOS NONEND-REF/CHG SEE PENALTY
>                                                 PAGE  3/ 3

'''

print(tst)

# Importamos la librería RE, definimos un fee por defecto
# y preguntamos al usuario si quiere cambiarlo
import re
fee = 46000
blue = 494
fee = input("\n-------------------------------------\nDefinir fee en ARS oficial\nPor defecto es ARS46000: ")
blue = input("\n-------------------------------------\nIndicar el tipo de cambio blue Vendedor: ")
ventausd = input("\n----------------------------------\nIndicar el precio en USD emitiendo en MIA: ")

"""
## Cotizacion Internacional INICIADOS EN ARGENTINA

---"""

# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)[0][1]
cambio=re.findall('1USD=(......)', tst)
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0][1]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)[0]
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS|AR|ARS )(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)
retenc = re.findall('(\d{0,6}.\d{2})(Q1 |-Q1 )', tst)
fare_usd = re.findall('USD(\D{0,6}\d{1,6}.\d{2}) ', tst)[0]

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    horarios = renglon[34:44]
    #orides = renglon[22:29]
    ori = renglon[22:25]
    des = renglon[25:28]
    tramo.append(vuelo+fecha+horarios+aeropuertos.get(ori) + " - " + aeropuertos.get(des))
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)
totalmia = (float(fee) / float(blue)) + float(ventausd)*.85

# Escribimos el resultado
texto =(f'\n-------------------------------------------------------------------\nCotización Internacional originada en Argentina:\n*TURISMO Y HOTELERÍA CONSULTORA*\nwww.thconsultora.com.ar | email: marco@thconsultora.com.ar | Tel/Wp: +543513070654\n-------------------------------------------------------------------\n* Compañia Emisora: {str(lineas.get(cia))}\n* Origen: {str(aeropuertos.get(orig))}\n\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Sale | Llega | Origen | Destino \n{str(tramos)}\n\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(franquicia.get(bagage))}\n* Tipo de Cambio oficial {str(cambio)}\n* Anticipo ganancias a recuperar en AFIP ARS: {str(retenc)} por pasajero \n* (válido solo emitiendo EN PESOS)\n**Total con impuestos ARS: {str(total)} por pasajero*\n* Cambios y Devoluciones: {ref}\n* Pago cash o tarjeta de crédito en 1 cuota solamente \n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n**Emitiendo en USD{str(int(totalmia))} billetes físicos*\n* Tomamos reserva solo con foto de DNI o Pasaporte\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)

"""# Cotizacion Internacional iniciado fuera de Argentina"""

# EMISIONES DE TKTS INICIADOS FUERA DE ARGENTINA
# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)#[0]
cambio=re.findall('1USD=(......)', tst)
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS)(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)
#retenc = re.findall('(\d{0,6}.\d{2})(Q1 |-Q1 )', tst)[0]
#fare_usd = re.findall('EUR{0,6}\d{1,6}.\d{2}) ', tst)[0]

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    orides = renglon[22:29]
    horarios = renglon[34:44]
    tramo.append(vuelo+fecha+orides+horarios)
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)

# Escribimos el resultado
texto =(f'Cotización Internacional originada fuera de Argentina:\n*TURISMO Y HOTELERÍA CONSULTORA*\nwww.thconsultora.com.ar | marco@thconsultora.com.ar | +543513070654\n-------------------------------------------------------------------\n* Compañia Emisora: {str(cia)}\n* Origen: {str(orig)}\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Tramo | Sale | Llega: \n{str(tramos)}\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(bagage)}\n* Tipo de Cambio oficial {str(cambio)}\n* Anticipo ganancias a recuperar en AFIP ARS: {str(retenc)} por pasajero \n* (válido solo emitiendo EN PESOS)\n**Total con impuestos ARS: {str(total)}*\n* Cambios y Devoluciones: {ref}\n* Pago cash o tarjeta de crédito en 1 cuota solamente \n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n**Emitiendo en USD billetes físicos*\n* Tomamos reserva solo con foto de DNI o Pasaporte\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)

"""## Cotización Cabotaje
---
"""

# Desmenuzamos el archivo buscando los campos puntuales con expresiones regulares

cia = re.findall('BG CXR: (..) |CARRIER (..)', tst)#[0]
route = re.findall(r'^\s{2}\d{1}\s{2}\w{2}.{53}',tst, flags=re.M)
orig = re.findall('\n (\w{3})\n', tst)[0]
fare_ars = re.findall('\nARS(\D{0,3}\d{1,6}.\d{2})', tst)[0]
bagage = re.findall(' (0P|20|30|32|2B|PC|1P|2P|3P)\n', tst)
ltd = re.findall('(DTE \d{2}\D{3}\d{2}/\d{2}:\d{2}|DTE \d{2}\D{3}\d{2})', tst)[0]
date = re.findall(r'(?:[ |*][A-Z]{1}.)((?:\d{2}\D{3} ))', tst)
ttl = re.findall('\n(ARS|AR|ARS )(\d{1,7}.\d{2})', tst)[-1][-1]
ref = re.findall('\n(ENDOS|NONREF|NONEND|NON-END|NON-REF)', tst)

# Los tramos los tomamos del frente del PNR y los recortamos para obtener solo la info relevante
tramo=[]
contador = len(route)

for renglon in route:
    vuelo = renglon[5:12]
    fecha = renglon[14:20]
    orides = renglon[22:29]
    horarios = renglon[34:44]
    tramo.append(vuelo+fecha+orides+horarios)
    contador = contador-1

# Juntamos toda la info de los tramos
tramos="\n".join(tramo)

# Agregamos el Fee al total del PNR
total=float(ttl)+float(fee)

totalblue = float(total) / float(blue)

# Escribimos el resultado
texto =(f'Cotización Cabotaje:\n---------------------------\n* Compañia Emisora: {str(cia)}\n* Origen: {str(orig)}\n\n---------------------------------\n* Despliegue de vuelos en horarios locales\n* Cia/Vuelo | Fecha | Tramo | Sale | Llega: \n\n{str(tramos)}\n\n* Ultimo día para emitir: {str(ltd)}\n* Equipaje incluido: {str(bagage)}\n* Total con impuestos ARS: {str(total)}\n* Cambios y Devoluciones: {ref}\n---------------------------------\n* Pago cash | Consultar financiación sin interés\n\n----------------------------\n* Equivalente Dólares al blue USD: {str(int(totalblue))}\n\n------------------------------------\n* Recomendamos llevar asistencia al viajero ver opciones aqui -> https://www.thconsultora.com.ar/shop')

print(texto)